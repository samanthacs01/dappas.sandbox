// Code generated by MockGen. DO NOT EDIT.
// Source: selector.dev/dappas/internal/modules/ecommerce/usecases (interfaces: IShopifyAuthCallbackUseCase)
//
// Generated by this command:
//
//	mockgen -destination=../mocks/mock_auth_callback_shopify_usecase.go -package=mocks selector.dev/dappas/internal/modules/ecommerce/usecases IShopifyAuthCallbackUseCase
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
	models "selector.dev/dappas/internal/modules/ecommerce/models"
)

// MockIShopifyAuthCallbackUseCase is a mock of IShopifyAuthCallbackUseCase interface.
type MockIShopifyAuthCallbackUseCase struct {
	ctrl     *gomock.Controller
	recorder *MockIShopifyAuthCallbackUseCaseMockRecorder
	isgomock struct{}
}

// MockIShopifyAuthCallbackUseCaseMockRecorder is the mock recorder for MockIShopifyAuthCallbackUseCase.
type MockIShopifyAuthCallbackUseCaseMockRecorder struct {
	mock *MockIShopifyAuthCallbackUseCase
}

// NewMockIShopifyAuthCallbackUseCase creates a new mock instance.
func NewMockIShopifyAuthCallbackUseCase(ctrl *gomock.Controller) *MockIShopifyAuthCallbackUseCase {
	mock := &MockIShopifyAuthCallbackUseCase{ctrl: ctrl}
	mock.recorder = &MockIShopifyAuthCallbackUseCaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIShopifyAuthCallbackUseCase) EXPECT() *MockIShopifyAuthCallbackUseCaseMockRecorder {
	return m.recorder
}

// Run mocks base method.
func (m *MockIShopifyAuthCallbackUseCase) Run(input *models.ShopifyAuthCallbackInput) (*models.ShopifyAuthCallbackOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Run", input)
	ret0, _ := ret[0].(*models.ShopifyAuthCallbackOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Run indicates an expected call of Run.
func (mr *MockIShopifyAuthCallbackUseCaseMockRecorder) Run(input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Run", reflect.TypeOf((*MockIShopifyAuthCallbackUseCase)(nil).Run), input)
}
