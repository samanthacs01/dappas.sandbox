// Code generated by MockGen. DO NOT EDIT.
// Source: selector.dev/security/config (interfaces: ISecurityConfig)
//
// Generated by this command:
//
//	mockgen -destination=../mocks/mock_security_config.go -package=mocks selector.dev/security/config ISecurityConfig
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockISecurityConfig is a mock of ISecurityConfig interface.
type MockISecurityConfig struct {
	ctrl     *gomock.Controller
	recorder *MockISecurityConfigMockRecorder
	isgomock struct{}
}

// MockISecurityConfigMockRecorder is the mock recorder for MockISecurityConfig.
type MockISecurityConfigMockRecorder struct {
	mock *MockISecurityConfig
}

// NewMockISecurityConfig creates a new mock instance.
func NewMockISecurityConfig(ctrl *gomock.Controller) *MockISecurityConfig {
	mock := &MockISecurityConfig{ctrl: ctrl}
	mock.recorder = &MockISecurityConfigMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockISecurityConfig) EXPECT() *MockISecurityConfigMockRecorder {
	return m.recorder
}

// GetSecretKey mocks base method.
func (m *MockISecurityConfig) GetSecretKey() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSecretKey")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetSecretKey indicates an expected call of GetSecretKey.
func (mr *MockISecurityConfigMockRecorder) GetSecretKey() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSecretKey", reflect.TypeOf((*MockISecurityConfig)(nil).GetSecretKey))
}

// GetTokenDuration mocks base method.
func (m *MockISecurityConfig) GetTokenDuration() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTokenDuration")
	ret0, _ := ret[0].(int)
	return ret0
}

// GetTokenDuration indicates an expected call of GetTokenDuration.
func (mr *MockISecurityConfigMockRecorder) GetTokenDuration() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTokenDuration", reflect.TypeOf((*MockISecurityConfig)(nil).GetTokenDuration))
}
