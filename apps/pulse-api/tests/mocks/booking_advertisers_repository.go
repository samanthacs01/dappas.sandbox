// Code generated by mockery v2.52.1. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	shared "selector.dev/pulse/internal/domain/shared"
)

// IAdvertisersRepository is an autogenerated mock type for the IAdvertisersRepository type
type IAdvertisersRepository struct {
	mock.Mock
}

// GetItemsAsNomenclator provides a mock function with no fields
func (_m *IAdvertisersRepository) GetItemsAsNomenclator() (*[]shared.Nomenclator, error) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetItemsAsNomenclator")
	}

	var r0 *[]shared.Nomenclator
	var r1 error
	if rf, ok := ret.Get(0).(func() (*[]shared.Nomenclator, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() *[]shared.Nomenclator); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*[]shared.Nomenclator)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewIAdvertisersRepository creates a new instance of IAdvertisersRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIAdvertisersRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *IAdvertisersRepository {
	mock := &IAdvertisersRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
