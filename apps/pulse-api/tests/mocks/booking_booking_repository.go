// Code generated by mockery v2.52.1. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	booking "selector.dev/pulse/internal/domain/booking"
)

// IBookingRepository is an autogenerated mock type for the IBookingRepository type
type IBookingRepository struct {
	mock.Mock
}

// DeleteDraft provides a mock function with given fields: id
func (_m *IBookingRepository) DeleteDraft(id int) error {
	ret := _m.Called(id)

	if len(ret) == 0 {
		panic("no return value specified for DeleteDraft")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(int) error); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// FetchOrdersAndFlights provides a mock function with given fields: flights
func (_m *IBookingRepository) FetchOrdersAndFlights(flights []int) (*[]booking.OrderWithFlights, error) {
	ret := _m.Called(flights)

	if len(ret) == 0 {
		panic("no return value specified for FetchOrdersAndFlights")
	}

	var r0 *[]booking.OrderWithFlights
	var r1 error
	if rf, ok := ret.Get(0).(func([]int) (*[]booking.OrderWithFlights, error)); ok {
		return rf(flights)
	}
	if rf, ok := ret.Get(0).(func([]int) *[]booking.OrderWithFlights); ok {
		r0 = rf(flights)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*[]booking.OrderWithFlights)
		}
	}

	if rf, ok := ret.Get(1).(func([]int) error); ok {
		r1 = rf(flights)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetBookingFulfillmentRateDetails provides a mock function with given fields: from, to
func (_m *IBookingRepository) GetBookingFulfillmentRateDetails(from string, to string) (*[]booking.BookingKpiDetailsItem, error) {
	ret := _m.Called(from, to)

	if len(ret) == 0 {
		panic("no return value specified for GetBookingFulfillmentRateDetails")
	}

	var r0 *[]booking.BookingKpiDetailsItem
	var r1 error
	if rf, ok := ret.Get(0).(func(string, string) (*[]booking.BookingKpiDetailsItem, error)); ok {
		return rf(from, to)
	}
	if rf, ok := ret.Get(0).(func(string, string) *[]booking.BookingKpiDetailsItem); ok {
		r0 = rf(from, to)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*[]booking.BookingKpiDetailsItem)
		}
	}

	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(from, to)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetBookingPayersConcentrationDetails provides a mock function with given fields: from, to
func (_m *IBookingRepository) GetBookingPayersConcentrationDetails(from string, to string) (*[]booking.BookingKpiDetailsItem, error) {
	ret := _m.Called(from, to)

	if len(ret) == 0 {
		panic("no return value specified for GetBookingPayersConcentrationDetails")
	}

	var r0 *[]booking.BookingKpiDetailsItem
	var r1 error
	if rf, ok := ret.Get(0).(func(string, string) (*[]booking.BookingKpiDetailsItem, error)); ok {
		return rf(from, to)
	}
	if rf, ok := ret.Get(0).(func(string, string) *[]booking.BookingKpiDetailsItem); ok {
		r0 = rf(from, to)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*[]booking.BookingKpiDetailsItem)
		}
	}

	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(from, to)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetBookingProductionsConcentrationDetails provides a mock function with given fields: from, to
func (_m *IBookingRepository) GetBookingProductionsConcentrationDetails(from string, to string) (*[]booking.BookingKpiDetailsItem, error) {
	ret := _m.Called(from, to)

	if len(ret) == 0 {
		panic("no return value specified for GetBookingProductionsConcentrationDetails")
	}

	var r0 *[]booking.BookingKpiDetailsItem
	var r1 error
	if rf, ok := ret.Get(0).(func(string, string) (*[]booking.BookingKpiDetailsItem, error)); ok {
		return rf(from, to)
	}
	if rf, ok := ret.Get(0).(func(string, string) *[]booking.BookingKpiDetailsItem); ok {
		r0 = rf(from, to)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*[]booking.BookingKpiDetailsItem)
		}
	}

	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(from, to)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetBookingStatsKpi provides a mock function with given fields: start, end
func (_m *IBookingRepository) GetBookingStatsKpi(start string, end string) (*booking.BookingStats, error) {
	ret := _m.Called(start, end)

	if len(ret) == 0 {
		panic("no return value specified for GetBookingStatsKpi")
	}

	var r0 *booking.BookingStats
	var r1 error
	if rf, ok := ret.Get(0).(func(string, string) (*booking.BookingStats, error)); ok {
		return rf(start, end)
	}
	if rf, ok := ret.Get(0).(func(string, string) *booking.BookingStats); ok {
		r0 = rf(start, end)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*booking.BookingStats)
		}
	}

	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(start, end)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetBookingValueDetails provides a mock function with given fields: from, to
func (_m *IBookingRepository) GetBookingValueDetails(from string, to string) (*[]booking.BookingKpiDetailsItem, error) {
	ret := _m.Called(from, to)

	if len(ret) == 0 {
		panic("no return value specified for GetBookingValueDetails")
	}

	var r0 *[]booking.BookingKpiDetailsItem
	var r1 error
	if rf, ok := ret.Get(0).(func(string, string) (*[]booking.BookingKpiDetailsItem, error)); ok {
		return rf(from, to)
	}
	if rf, ok := ret.Get(0).(func(string, string) *[]booking.BookingKpiDetailsItem); ok {
		r0 = rf(from, to)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*[]booking.BookingKpiDetailsItem)
		}
	}

	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(from, to)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetDraftById provides a mock function with given fields: id
func (_m *IBookingRepository) GetDraftById(id int) (*booking.IoDraftDetails, error) {
	ret := _m.Called(id)

	if len(ret) == 0 {
		panic("no return value specified for GetDraftById")
	}

	var r0 *booking.IoDraftDetails
	var r1 error
	if rf, ok := ret.Get(0).(func(int) (*booking.IoDraftDetails, error)); ok {
		return rf(id)
	}
	if rf, ok := ret.Get(0).(func(int) *booking.IoDraftDetails); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*booking.IoDraftDetails)
		}
	}

	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetFileProcessingStatus provides a mock function with no fields
func (_m *IBookingRepository) GetFileProcessingStatus() (*booking.ProcessingStatus, error) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetFileProcessingStatus")
	}

	var r0 *booking.ProcessingStatus
	var r1 error
	if rf, ok := ret.Get(0).(func() (*booking.ProcessingStatus, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() *booking.ProcessingStatus); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*booking.ProcessingStatus)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetFlights provides a mock function with given fields: criteria
func (_m *IBookingRepository) GetFlights(criteria booking.FlightListFilter) (*[]booking.FlightListItem, *int64, error) {
	ret := _m.Called(criteria)

	if len(ret) == 0 {
		panic("no return value specified for GetFlights")
	}

	var r0 *[]booking.FlightListItem
	var r1 *int64
	var r2 error
	if rf, ok := ret.Get(0).(func(booking.FlightListFilter) (*[]booking.FlightListItem, *int64, error)); ok {
		return rf(criteria)
	}
	if rf, ok := ret.Get(0).(func(booking.FlightListFilter) *[]booking.FlightListItem); ok {
		r0 = rf(criteria)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*[]booking.FlightListItem)
		}
	}

	if rf, ok := ret.Get(1).(func(booking.FlightListFilter) *int64); ok {
		r1 = rf(criteria)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*int64)
		}
	}

	if rf, ok := ret.Get(2).(func(booking.FlightListFilter) error); ok {
		r2 = rf(criteria)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// GetInsertionOrders provides a mock function with given fields: criteria
func (_m *IBookingRepository) GetInsertionOrders(criteria booking.InsertionOrderListFilter) (*[]booking.InsertionOrderListItem, *int64, error) {
	ret := _m.Called(criteria)

	if len(ret) == 0 {
		panic("no return value specified for GetInsertionOrders")
	}

	var r0 *[]booking.InsertionOrderListItem
	var r1 *int64
	var r2 error
	if rf, ok := ret.Get(0).(func(booking.InsertionOrderListFilter) (*[]booking.InsertionOrderListItem, *int64, error)); ok {
		return rf(criteria)
	}
	if rf, ok := ret.Get(0).(func(booking.InsertionOrderListFilter) *[]booking.InsertionOrderListItem); ok {
		r0 = rf(criteria)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*[]booking.InsertionOrderListItem)
		}
	}

	if rf, ok := ret.Get(1).(func(booking.InsertionOrderListFilter) *int64); ok {
		r1 = rf(criteria)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*int64)
		}
	}

	if rf, ok := ret.Get(2).(func(booking.InsertionOrderListFilter) error); ok {
		r2 = rf(criteria)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// GetIoDraftToProcess provides a mock function with given fields: process
func (_m *IBookingRepository) GetIoDraftToProcess(process int) (*[]booking.DraftToProcess, error) {
	ret := _m.Called(process)

	if len(ret) == 0 {
		panic("no return value specified for GetIoDraftToProcess")
	}

	var r0 *[]booking.DraftToProcess
	var r1 error
	if rf, ok := ret.Get(0).(func(int) (*[]booking.DraftToProcess, error)); ok {
		return rf(process)
	}
	if rf, ok := ret.Get(0).(func(int) *[]booking.DraftToProcess); ok {
		r0 = rf(process)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*[]booking.DraftToProcess)
		}
	}

	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(process)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetIoDrafts provides a mock function with given fields: criteria
func (_m *IBookingRepository) GetIoDrafts(criteria booking.IoDraftListFilter) (*[]booking.IoDraftListItem, *int64, error) {
	ret := _m.Called(criteria)

	if len(ret) == 0 {
		panic("no return value specified for GetIoDrafts")
	}

	var r0 *[]booking.IoDraftListItem
	var r1 *int64
	var r2 error
	if rf, ok := ret.Get(0).(func(booking.IoDraftListFilter) (*[]booking.IoDraftListItem, *int64, error)); ok {
		return rf(criteria)
	}
	if rf, ok := ret.Get(0).(func(booking.IoDraftListFilter) *[]booking.IoDraftListItem); ok {
		r0 = rf(criteria)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*[]booking.IoDraftListItem)
		}
	}

	if rf, ok := ret.Get(1).(func(booking.IoDraftListFilter) *int64); ok {
		r1 = rf(criteria)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*int64)
		}
	}

	if rf, ok := ret.Get(2).(func(booking.IoDraftListFilter) error); ok {
		r2 = rf(criteria)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// ReviewedDraft provides a mock function with given fields: reviewedDraft
func (_m *IBookingRepository) ReviewedDraft(reviewedDraft booking.ReviewedDraftInput) error {
	ret := _m.Called(reviewedDraft)

	if len(ret) == 0 {
		panic("no return value specified for ReviewedDraft")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(booking.ReviewedDraftInput) error); ok {
		r0 = rf(reviewedDraft)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SaveDrafts provides a mock function with given fields: drafts
func (_m *IBookingRepository) SaveDrafts(drafts []booking.IoDraft) error {
	ret := _m.Called(drafts)

	if len(ret) == 0 {
		panic("no return value specified for SaveDrafts")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func([]booking.IoDraft) error); ok {
		r0 = rf(drafts)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UpdateBatchDraftStatus provides a mock function with given fields: ids, status
func (_m *IBookingRepository) UpdateBatchDraftStatus(ids []int, status booking.IoDraftStatus) error {
	ret := _m.Called(ids, status)

	if len(ret) == 0 {
		panic("no return value specified for UpdateBatchDraftStatus")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func([]int, booking.IoDraftStatus) error); ok {
		r0 = rf(ids, status)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UpdateDraftAfterProcessed provides a mock function with given fields: draft, flights
func (_m *IBookingRepository) UpdateDraftAfterProcessed(draft booking.IoDraft, flights []booking.IoDraftFlight) error {
	ret := _m.Called(draft, flights)

	if len(ret) == 0 {
		panic("no return value specified for UpdateDraftAfterProcessed")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(booking.IoDraft, []booking.IoDraftFlight) error); ok {
		r0 = rf(draft, flights)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UpdateDraftStatus provides a mock function with given fields: id, status
func (_m *IBookingRepository) UpdateDraftStatus(id int, status booking.IoDraftStatus) error {
	ret := _m.Called(id, status)

	if len(ret) == 0 {
		panic("no return value specified for UpdateDraftStatus")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(int, booking.IoDraftStatus) error); ok {
		r0 = rf(id, status)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewIBookingRepository creates a new instance of IBookingRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIBookingRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *IBookingRepository {
	mock := &IBookingRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
