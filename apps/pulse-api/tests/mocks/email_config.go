// Code generated by mockery v2.52.1. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// EmailConfig is an autogenerated mock type for the EmailConfig type
type EmailConfig struct {
	mock.Mock
}

// GetConfirmLink provides a mock function with no fields
func (_m *EmailConfig) GetConfirmLink() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetConfirmLink")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetFromEmail provides a mock function with no fields
func (_m *EmailConfig) GetFromEmail() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetFromEmail")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetLogoUrl provides a mock function with no fields
func (_m *EmailConfig) GetLogoUrl() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetLogoUrl")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetResendEmailApiKey provides a mock function with no fields
func (_m *EmailConfig) GetResendEmailApiKey() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetResendEmailApiKey")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetSendGridAPIKey provides a mock function with no fields
func (_m *EmailConfig) GetSendGridAPIKey() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetSendGridAPIKey")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetSupportEmail provides a mock function with no fields
func (_m *EmailConfig) GetSupportEmail() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetSupportEmail")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// NewEmailConfig creates a new instance of EmailConfig. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewEmailConfig(t interface {
	mock.TestingT
	Cleanup(func())
}) *EmailConfig {
	mock := &EmailConfig{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
