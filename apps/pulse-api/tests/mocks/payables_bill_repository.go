// Code generated by mockery v2.52.1. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	payables "selector.dev/pulse/internal/domain/payables"
)

// IBillsRepository is an autogenerated mock type for the IBillsRepository type
type IBillsRepository struct {
	mock.Mock
}

// GetBills provides a mock function with given fields: criteria
func (_m *IBillsRepository) GetBills(criteria *payables.BillsListCriteria) (*[]payables.BillListItem, *int64, error) {
	ret := _m.Called(criteria)

	if len(ret) == 0 {
		panic("no return value specified for GetBills")
	}

	var r0 *[]payables.BillListItem
	var r1 *int64
	var r2 error
	if rf, ok := ret.Get(0).(func(*payables.BillsListCriteria) (*[]payables.BillListItem, *int64, error)); ok {
		return rf(criteria)
	}
	if rf, ok := ret.Get(0).(func(*payables.BillsListCriteria) *[]payables.BillListItem); ok {
		r0 = rf(criteria)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*[]payables.BillListItem)
		}
	}

	if rf, ok := ret.Get(1).(func(*payables.BillsListCriteria) *int64); ok {
		r1 = rf(criteria)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*int64)
		}
	}

	if rf, ok := ret.Get(2).(func(*payables.BillsListCriteria) error); ok {
		r2 = rf(criteria)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// GetBillsByBillingProduction provides a mock function with given fields: criteria
func (_m *IBillsRepository) GetBillsByBillingProduction(criteria *payables.ProductionBillingBillsListCriteria) (*[]payables.ProductionBillingBillListItem, *int64, error) {
	ret := _m.Called(criteria)

	if len(ret) == 0 {
		panic("no return value specified for GetBillsByBillingProduction")
	}

	var r0 *[]payables.ProductionBillingBillListItem
	var r1 *int64
	var r2 error
	if rf, ok := ret.Get(0).(func(*payables.ProductionBillingBillsListCriteria) (*[]payables.ProductionBillingBillListItem, *int64, error)); ok {
		return rf(criteria)
	}
	if rf, ok := ret.Get(0).(func(*payables.ProductionBillingBillsListCriteria) *[]payables.ProductionBillingBillListItem); ok {
		r0 = rf(criteria)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*[]payables.ProductionBillingBillListItem)
		}
	}

	if rf, ok := ret.Get(1).(func(*payables.ProductionBillingBillsListCriteria) *int64); ok {
		r1 = rf(criteria)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*int64)
		}
	}

	if rf, ok := ret.Get(2).(func(*payables.ProductionBillingBillsListCriteria) error); ok {
		r2 = rf(criteria)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// GetBillsByCollectionProduction provides a mock function with given fields: criteria
func (_m *IBillsRepository) GetBillsByCollectionProduction(criteria *payables.ProductionCollectionBillsListCriteria) (*[]payables.ProductionCollectionBillListItem, *int64, error) {
	ret := _m.Called(criteria)

	if len(ret) == 0 {
		panic("no return value specified for GetBillsByCollectionProduction")
	}

	var r0 *[]payables.ProductionCollectionBillListItem
	var r1 *int64
	var r2 error
	if rf, ok := ret.Get(0).(func(*payables.ProductionCollectionBillsListCriteria) (*[]payables.ProductionCollectionBillListItem, *int64, error)); ok {
		return rf(criteria)
	}
	if rf, ok := ret.Get(0).(func(*payables.ProductionCollectionBillsListCriteria) *[]payables.ProductionCollectionBillListItem); ok {
		r0 = rf(criteria)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*[]payables.ProductionCollectionBillListItem)
		}
	}

	if rf, ok := ret.Get(1).(func(*payables.ProductionCollectionBillsListCriteria) *int64); ok {
		r1 = rf(criteria)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*int64)
		}
	}

	if rf, ok := ret.Get(2).(func(*payables.ProductionCollectionBillsListCriteria) error); ok {
		r2 = rf(criteria)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// GetPayablesStackStatsKpiDetails provides a mock function with given fields: statType, start, end
func (_m *IBillsRepository) GetPayablesStackStatsKpiDetails(statType string, start string, end string) ([]map[string]interface{}, error) {
	ret := _m.Called(statType, start, end)

	if len(ret) == 0 {
		panic("no return value specified for GetPayablesStackStatsKpiDetails")
	}

	var r0 []map[string]interface{}
	var r1 error
	if rf, ok := ret.Get(0).(func(string, string, string) ([]map[string]interface{}, error)); ok {
		return rf(statType, start, end)
	}
	if rf, ok := ret.Get(0).(func(string, string, string) []map[string]interface{}); ok {
		r0 = rf(statType, start, end)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]map[string]interface{})
		}
	}

	if rf, ok := ret.Get(1).(func(string, string, string) error); ok {
		r1 = rf(statType, start, end)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetPayablesStatsKpi provides a mock function with given fields: start, end
func (_m *IBillsRepository) GetPayablesStatsKpi(start string, end string) (*payables.PayableStats, error) {
	ret := _m.Called(start, end)

	if len(ret) == 0 {
		panic("no return value specified for GetPayablesStatsKpi")
	}

	var r0 *payables.PayableStats
	var r1 error
	if rf, ok := ret.Get(0).(func(string, string) (*payables.PayableStats, error)); ok {
		return rf(start, end)
	}
	if rf, ok := ret.Get(0).(func(string, string) *payables.PayableStats); ok {
		r0 = rf(start, end)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*payables.PayableStats)
		}
	}

	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(start, end)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetPayablesStatsKpiDetails provides a mock function with given fields: statType, start, end
func (_m *IBillsRepository) GetPayablesStatsKpiDetails(statType string, start string, end string) ([]payables.PayablesKpiDetailsItem, error) {
	ret := _m.Called(statType, start, end)

	if len(ret) == 0 {
		panic("no return value specified for GetPayablesStatsKpiDetails")
	}

	var r0 []payables.PayablesKpiDetailsItem
	var r1 error
	if rf, ok := ret.Get(0).(func(string, string, string) ([]payables.PayablesKpiDetailsItem, error)); ok {
		return rf(statType, start, end)
	}
	if rf, ok := ret.Get(0).(func(string, string, string) []payables.PayablesKpiDetailsItem); ok {
		r0 = rf(statType, start, end)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]payables.PayablesKpiDetailsItem)
		}
	}

	if rf, ok := ret.Get(1).(func(string, string, string) error); ok {
		r1 = rf(statType, start, end)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// RegisterPayment provides a mock function with given fields: id, amount
func (_m *IBillsRepository) RegisterPayment(id int, amount float64) error {
	ret := _m.Called(id, amount)

	if len(ret) == 0 {
		panic("no return value specified for RegisterPayment")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(int, float64) error); ok {
		r0 = rf(id, amount)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewIBillsRepository creates a new instance of IBillsRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIBillsRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *IBillsRepository {
	mock := &IBillsRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
